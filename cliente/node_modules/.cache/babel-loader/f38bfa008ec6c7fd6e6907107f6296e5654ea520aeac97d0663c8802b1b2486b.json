{"ast":null,"code":"var _jsxFileName = \"C:\\\\proyectos\\\\Gestion\\\\cliente\\\\src\\\\componentes\\\\RegistroEmpleado.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistroEmpleado = ({\n  actualizarListaEmpleados\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [nombre, setNombre] = useState('');\n  const [email, setEmail] = useState('');\n  const [puesto, setPuesto] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const nuevoEmpleado = {\n        nombre,\n        email,\n        puesto\n      };\n      console.log(nuevoEmpleado);\n      await axios.post('http://localhost:5000/api/empleados', nuevoEmpleado);\n\n      // Limpiar los campos después de enviar el formulario\n      // El navegete redirecciona luego de realizar regsitros de usuarios\n      setNombre('');\n      setEmail('');\n      setPuesto('');\n      navigate('/empleados');\n      // Actualizar la lista de empleados después de registrar uno nuevo\n      // Se usa el hook naveteger que es proprio de la version de route5 con la cual esta prediseñado este codigo;\n\n      alert('Empleado registrado exitosamente');\n    } catch (error) {\n      console.error('Error al registrar el empleado:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registro de Cliente\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nombre\",\n          placeholder: \"Nombre\",\n          value: nombre,\n          onChange: e => setNombre(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          id: \"telefono\",\n          placeholder: \"Tel\\xE9fono\",\n          value: telefono,\n          onChange: e => setTelefono(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: () => navigate('/empleados'),\n        children: \"Lista Clientes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(RegistroEmpleado, \"8s6LZCHUYS1/fnARpPV4n3zoomw=\", false, function () {\n  return [useNavigate];\n});\n_c = RegistroEmpleado;\nexport default RegistroEmpleado;\nvar _c;\n$RefreshReg$(_c, \"RegistroEmpleado\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","RegistroEmpleado","actualizarListaEmpleados","_s","navigate","nombre","setNombre","email","setEmail","puesto","setPuesto","handleSubmit","e","preventDefault","nuevoEmpleado","console","log","post","alert","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","type","id","placeholder","value","onChange","target","required","telefono","setTelefono","onClick","_c","$RefreshReg$"],"sources":["C:/proyectos/Gestion/cliente/src/componentes/RegistroEmpleado.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport {useNavigate} from 'react-router-dom'\r\n\r\nconst RegistroEmpleado = ({ actualizarListaEmpleados }) => {\r\n    const navigate = useNavigate ();\r\n    const [nombre, setNombre] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [puesto, setPuesto] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const nuevoEmpleado = {\r\n        nombre,\r\n        email,\r\n        puesto,\r\n      };\r\n      console.log(nuevoEmpleado);\r\n      await axios.post('http://localhost:5000/api/empleados', nuevoEmpleado);\r\n\r\n      // Limpiar los campos después de enviar el formulario\r\n      // El navegete redirecciona luego de realizar regsitros de usuarios\r\n      setNombre('');\r\n      setEmail('');\r\n      setPuesto('');\r\n      navigate('/empleados')\r\n      // Actualizar la lista de empleados después de registrar uno nuevo\r\n     // Se usa el hook naveteger que es proprio de la version de route5 con la cual esta prediseñado este codigo;\r\n\r\n      alert('Empleado registrado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al registrar el empleado:', error);\r\n    }\r\n  };\r\n    return (\r\n        <div>\r\n            <h2>Registro de Cliente</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"input-field\">\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"nombre\"\r\n                        placeholder=\"Nombre\"\r\n                        value={nombre}\r\n                        onChange={(e) => setNombre(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email\"\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"input-field\">\r\n                    <input\r\n                        type=\"tel\"\r\n                        id=\"telefono\"\r\n                        placeholder=\"Teléfono\"\r\n                        value={telefono}\r\n                        onChange={(e) => setTelefono(e.target.value)}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn\">\r\n                    Registrar\r\n                </button>\r\n                <button type=\"button\" className=\"btn\" onClick={() => navigate('/empleados')}>\r\n                    Lista Clientes\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegistroEmpleado;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}