{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Red\\\\Downloads\\\\Gestion de datos2 (1)\\\\Gestion de datos2\\\\cliente\\\\src\\\\componentes\\\\RegistroEmpleado.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegistroEmpleado = ({\n  actualizarListaEmpleados\n}) => {\n  _s();\n  const [nombre, setNombre] = useState('');\n  const [email, setEmail] = useState('');\n  const [puesto, setPuesto] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const nuevoEmpleado = {\n        nombre,\n        email,\n        puesto\n      };\n      await axios.post('http://localhost:5000/api/empleados', nuevoEmpleado);\n\n      // Limpiar los campos después de enviar el formulario\n      setNombre('');\n      setEmail('');\n      setPuesto('');\n\n      // Actualizar la lista de empleados después de registrar uno nuevo\n      actualizarListaEmpleados();\n      alert('Empleado registrado exitosamente');\n    } catch (error) {\n      console.error('Error al registrar el empleado:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registro de Empleado\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nombre\",\n          value: nombre,\n          onChange: e => setNombre(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          children: \"Nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"puesto\",\n          value: puesto,\n          onChange: e => setPuesto(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"puesto\",\n          children: \"Puesto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn\",\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistroEmpleado, \"YtxwO5cnHU9xiLeCsqRkZlNNwkY=\");\n_c = RegistroEmpleado;\nexport default RegistroEmpleado;\nvar _c;\n$RefreshReg$(_c, \"RegistroEmpleado\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","RegistroEmpleado","actualizarListaEmpleados","_s","nombre","setNombre","email","setEmail","puesto","setPuesto","handleSubmit","e","preventDefault","nuevoEmpleado","post","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","type","id","value","onChange","target","required","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/Red/Downloads/Gestion de datos2 (1)/Gestion de datos2/cliente/src/componentes/RegistroEmpleado.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst RegistroEmpleado = ({ actualizarListaEmpleados }) => {\r\n    const [nombre, setNombre] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [puesto, setPuesto] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const nuevoEmpleado = {\r\n        nombre,\r\n        email,\r\n        puesto,\r\n      };\r\n\r\n      await axios.post('http://localhost:5000/api/empleados', nuevoEmpleado);\r\n\r\n      // Limpiar los campos después de enviar el formulario\r\n      setNombre('');\r\n      setEmail('');\r\n      setPuesto('');\r\n      \r\n      // Actualizar la lista de empleados después de registrar uno nuevo\r\n      actualizarListaEmpleados();\r\n\r\n      alert('Empleado registrado exitosamente');\r\n    } catch (error) {\r\n      console.error('Error al registrar el empleado:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Registro de Empleado</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-field\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"nombre\"\r\n            value={nombre}\r\n            onChange={(e) => setNombre(e.target.value)}\r\n            required\r\n          />\r\n          <label htmlFor=\"nombre\">Nombre</label>\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <label htmlFor=\"email\">Email</label>\r\n        </div>\r\n        <div className=\"input-field\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"puesto\"\r\n            value={puesto}\r\n            onChange={(e) => setPuesto(e.target.value)}\r\n            required\r\n          />\r\n          <label htmlFor=\"puesto\">Puesto</label>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn\">\r\n          Registrar\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistroEmpleado;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}